// <auto-generated />
using System;
using Accounting.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Accounting.Persistence.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220302090408_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Accounting.Domain.Entities.LanguageManager.clsLanguage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("tblLanguage");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.LanguageManager.clsLanguage_LanguageKeyValue", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Equal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageKeyValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LanguageKeyValueId");

                    b.ToTable("tblLanguage_LanguageKeyValue");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.LanguageManager.clsLanguageKeyValue", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("tblLanguageKeyValue");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("tblRole");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsRoleTask", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("RoleId");

                    b.HasIndex("TaskId");

                    b.ToTable("tblRoleTask");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsRoleTaskDate", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DaysNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleTaskID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("RoleTaskID");

                    b.ToTable("tblRoleTaskDate");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsTask", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("tblTask");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserIdentity", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("UserInfoId")
                        .IsUnique();

                    b.ToTable("tblUserIdentity");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("LanguageId");

                    b.ToTable("tblUserInfo");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserInRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("tblUserInRole");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserLogin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.LanguageManager.clsLanguage_LanguageKeyValue", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.LanguageManager.clsLanguage", "language")
                        .WithMany("Language_LanguageKeyValues")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Accounting.Domain.Entities.LanguageManager.clsLanguageKeyValue", "languageKeyValue")
                        .WithMany("Language_LanguageKeyValues")
                        .HasForeignKey("LanguageKeyValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("language");

                    b.Navigation("languageKeyValue");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsRoleTask", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.UserManager.clsRole", "Role")
                        .WithMany("RoleTasks")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Accounting.Domain.Entities.UserManager.clsTask", "Task")
                        .WithMany("RoleTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsRoleTaskDate", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.UserManager.clsRoleTask", "RoleTask")
                        .WithMany("RoleTaskDates")
                        .HasForeignKey("RoleTaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleTask");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserIdentity", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.UserManager.clsUserInfo", "UserInfo")
                        .WithOne("UserIdentity")
                        .HasForeignKey("Accounting.Domain.Entities.UserManager.clsUserIdentity", "UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserInfo", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.LanguageManager.clsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserInRole", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.UserManager.clsRole", "Role")
                        .WithMany("UserInRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Accounting.Domain.Entities.UserManager.clsUserInfo", "UserInfo")
                        .WithMany("userInRoles")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserLogin", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.UserManager.clsUserInfo", "UserInfo")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.LanguageManager.clsLanguage", b =>
                {
                    b.Navigation("Language_LanguageKeyValues");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.LanguageManager.clsLanguageKeyValue", b =>
                {
                    b.Navigation("Language_LanguageKeyValues");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsRole", b =>
                {
                    b.Navigation("RoleTasks");

                    b.Navigation("UserInRoles");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsRoleTask", b =>
                {
                    b.Navigation("RoleTaskDates");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsTask", b =>
                {
                    b.Navigation("RoleTasks");
                });

            modelBuilder.Entity("Accounting.Domain.Entities.UserManager.clsUserInfo", b =>
                {
                    b.Navigation("UserIdentity")
                        .IsRequired();

                    b.Navigation("UserLogins");

                    b.Navigation("userInRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
